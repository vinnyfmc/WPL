// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPL.Data.Context;

namespace WPL.Data.Migrations
{
    [DbContext(typeof(WPLContext))]
    partial class WPLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WPL.Domain.Entities.Campeonato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("ImagemLogo")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemRegulamentoSugestao")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeAbreviado")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Status");

                    b.Property<int>("TipoSugestao");

                    b.HasKey("Id");

                    b.ToTable("Campeonato");
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoEdicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CampeonatoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("ImagemBanner")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemLogo")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemPremiacao")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemRegulamento")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Status");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId");

                    b.ToTable("CampeonatoEdicao");
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoEdicaoFase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CampeonatoEdicaoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoEdicaoId");

                    b.ToTable("CampeonatoEdicaoFase");
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoEdicaoTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CampeonatoEdicaoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<int>("Status");

                    b.Property<long>("TimeId");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoEdicaoId");

                    b.HasIndex("TimeId");

                    b.ToTable("CampeonatoEdicaoTime");
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoPlataforma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CampeonatoId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<long>("PlataformaId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId");

                    b.HasIndex("PlataformaId");

                    b.ToTable("CampeonatoPlataforma");
                });

            modelBuilder.Entity("WPL.Domain.Entities.Jogador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<long>("JogadorSenhaId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<long>("PlataformaId");

                    b.Property<long>("PosicaoId");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("JogadorSenhaId");

                    b.HasIndex("PlataformaId");

                    b.HasIndex("PosicaoId");

                    b.ToTable("Jogador");
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogadorSenha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("JogadorSenha");
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogadorStatusHistorico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<long>("JogadorId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("JogadorStatusHistorico");
                });

            modelBuilder.Entity("WPL.Domain.Entities.Jogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CampeonatoEdicaoFaseId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<int>("GolsCasa");

                    b.Property<int>("GolsFora");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<int>("Status");

                    b.Property<long>("TimeCasaId");

                    b.Property<long>("TimeForaId");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoEdicaoFaseId");

                    b.HasIndex("TimeCasaId");

                    b.HasIndex("TimeForaId");

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogoJogador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Assistencias");

                    b.Property<bool>("CartaoAmarelo")
                        .HasColumnType("bit");

                    b.Property<bool>("CartaoVermelho")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<int>("Gols");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<long>("JogadorId");

                    b.Property<long>("JogoId");

                    b.Property<bool>("MelhorEmCampo")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Nota");

                    b.Property<long>("PosicaoId");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("JogoId");

                    b.HasIndex("PosicaoId");

                    b.ToTable("JogoJogador");
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogoTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Confirmado");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<int?>("GolsCasa")
                        .IsRequired();

                    b.Property<int?>("GolsFora")
                        .IsRequired();

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("ImagemAssistencias")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemGols")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemNotas")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ImagemPlacar")
                        .HasColumnType("varchar(300)");

                    b.Property<long>("JogoId");

                    b.Property<long>("TimeId");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("TimeId");

                    b.ToTable("JogoTime");
                });

            modelBuilder.Entity("WPL.Domain.Entities.Plataforma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("ImagemLogo")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeAbreviado")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("PlataformaDefault");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Plataforma");
                });

            modelBuilder.Entity("WPL.Domain.Entities.Posicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeAbreviado")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Posicao");
                });

            modelBuilder.Entity("WPL.Domain.Entities.Time", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("DateTime");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<string>("ImagemLogo")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeAbreviado")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<long>("PlataformaId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PlataformaId");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("WPL.Domain.Entities.TimeJogador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DateTime");

                    b.Property<bool>("EhManager")
                        .HasColumnType("bit");

                    b.Property<bool>("EhSubManager")
                        .HasColumnType("bit");

                    b.Property<long?>("IdJogadorAlteracao");

                    b.Property<long?>("IdJogadorCadastro");

                    b.Property<long?>("IdJogadorExclusao");

                    b.Property<long>("JogadorId");

                    b.Property<long>("PosicaoId");

                    b.Property<int>("Status");

                    b.Property<long>("TimeId");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("PosicaoId");

                    b.HasIndex("TimeId");

                    b.ToTable("TimeJogador");
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoEdicao", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Campeonato", "Campeonato")
                        .WithMany("Edicoes")
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoEdicaoFase", b =>
                {
                    b.HasOne("WPL.Domain.Entities.CampeonatoEdicao", "CampeonatoEdicao")
                        .WithMany("Fases")
                        .HasForeignKey("CampeonatoEdicaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoEdicaoTime", b =>
                {
                    b.HasOne("WPL.Domain.Entities.CampeonatoEdicao", "CampeonatoEdicao")
                        .WithMany("Times")
                        .HasForeignKey("CampeonatoEdicaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Time", "Time")
                        .WithMany("CampeonatoEdicoes")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.CampeonatoPlataforma", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Campeonato", "Campeonato")
                        .WithMany("Plataformas")
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Plataforma", "Plataforma")
                        .WithMany("Campeonatos")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.Jogador", b =>
                {
                    b.HasOne("WPL.Domain.Entities.JogadorSenha", "JogadorSenha")
                        .WithMany("Jogadores")
                        .HasForeignKey("JogadorSenhaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Plataforma", "Plataforma")
                        .WithMany("Jogadores")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Posicao", "PosicaoPreferida")
                        .WithMany("Jogadores")
                        .HasForeignKey("PosicaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogadorStatusHistorico", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Jogador", "Jogador")
                        .WithMany("HistoricosStatus")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.Jogo", b =>
                {
                    b.HasOne("WPL.Domain.Entities.CampeonatoEdicaoFase", "CampeonatoEdicaoFase")
                        .WithMany("Jogos")
                        .HasForeignKey("CampeonatoEdicaoFaseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.JogoTime", "TimeCasa")
                        .WithMany("JogosTimeCasa")
                        .HasForeignKey("TimeCasaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.JogoTime", "TimeFora")
                        .WithMany("JogosTimeFora")
                        .HasForeignKey("TimeForaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogoJogador", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Jogador", "Jogador")
                        .WithMany("JogosJogador")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Jogo", "Jogo")
                        .WithMany("JogoJogadores")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Posicao", "Posicao")
                        .WithMany("JogoJogadores")
                        .HasForeignKey("PosicaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.JogoTime", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Jogo", "Jogo")
                        .WithMany("JogoTimes")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Time", "Time")
                        .WithMany("JogosTime")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.Time", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Plataforma", "Plataforma")
                        .WithMany("Times")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPL.Domain.Entities.TimeJogador", b =>
                {
                    b.HasOne("WPL.Domain.Entities.Jogador", "Jogador")
                        .WithMany("TimesJogador")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Posicao", "PosicaoDefault")
                        .WithMany("TimeJogadores")
                        .HasForeignKey("PosicaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPL.Domain.Entities.Time", "Time")
                        .WithMany("TimeJogadores")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
